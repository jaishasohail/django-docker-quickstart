name: Django CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

  lint-security:
    runs-on: ubuntu-latest
    needs: build-install
    steps:
      - uses: actions/checkout@v4
        - name: Install linting tools
          run: pip install ruff black
      - name: Lint
        run: bash scripts/lint.sh
      - name: Security Scan
        run: pip install bandit && bandit -r src/project_name

  test:
    runs-on: ubuntu-latest
    needs: lint-security
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass
    steps:
      - uses: actions/checkout@v4
      - name: Wait for DB
        run: sleep 15
      - name: Run tests
        run: bash scripts/test.sh

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t myapp:latest -f deployment/Dockerfile .

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - uses: actions/checkout@v4
      - name: Deploy (example)
        run: echo "Deploying to production..."
        # Add your deployment script/command here
